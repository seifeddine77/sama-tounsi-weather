import 'package:flutter/foundation.dart';
import '../models/location_data.dart';

/// Utilitaires sp√©cifiques au web
class WebUtils {
  /// Fournit une localisation par d√©faut pour les tests web
  static LocationData getDefaultLocation() {
    return LocationData(
      latitude: 48.8566,
      longitude: 2.3522,
      cityName: 'Paris',
      country: 'FR',
      state: '√éle-de-France',
    );
  }

  /// V√©rifie si la g√©olocalisation est support√©e
  static bool isGeolocationSupported() {
    if (kIsWeb) {
      // Sur le web, v√©rifier si l'API Geolocation est disponible
      return true; // Geolocator package g√®re cette v√©rification
    }
    return true;
  }

  /// G√®re les erreurs sp√©cifiques au web
  static String handleWebError(dynamic error) {
    final errorString = error.toString().toLowerCase();
    
    if (errorString.contains('user denied')) {
      return 'Acc√®s √† la localisation refus√©. Veuillez autoriser la g√©olocalisation dans votre navigateur.';
    }
    
    if (errorString.contains('position unavailable')) {
      return 'Position indisponible. V√©rifiez votre connexion et r√©essayez.';
    }
    
    if (errorString.contains('timeout')) {
      return 'D√©lai d\'attente d√©pass√©. V√©rifiez votre connexion internet.';
    }
    
    if (errorString.contains('network')) {
      return 'Erreur r√©seau. V√©rifiez votre connexion internet.';
    }
    
    return 'Erreur: $error';
  }

  /// Instructions pour l'utilisateur web
  static List<String> getWebInstructions() {
    return [
      'üåê Pour une meilleure exp√©rience sur le web:',
      '‚Ä¢ Autorisez l\'acc√®s √† la localisation quand demand√©',
      '‚Ä¢ Utilisez une connexion internet stable',
      '‚Ä¢ Configurez votre cl√© API OpenWeatherMap',
      '‚Ä¢ Rechargez la page si n√©cessaire',
    ];
  }
}
